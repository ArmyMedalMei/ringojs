#! /usr/bin/env ringo

// parse command line options
var parser = new (require('helma/args').Parser);
parser.addOption("a", "app", "APP", "The exported property name of the JSGI app (default: 'app')");
parser.addOption("c", "config", "MODULE", "The module containing the JSGI app (default: 'config')");
parser.addOption("H", "host", "HOST", "The host name to bind to (default: 0.0.0.0)");
parser.addOption("m", "mountpoint", "PATH", "The URI path where to mount the application (default: /)");
parser.addOption("p", "port", "PORT", "The TCP port to listen on (default: 8080)");
parser.addOption("h", "help", null, "Print help message and exit");

var cmd = system.args.shift();
var options = parser.parse(system.args);

if (options.help) {
    print("Usage:");
    print("", cmd, "[OPTIONS]", "[PATH]");
    print("Options:");
    print(parser.help());
    require("helma/shell").quit();
}

// first entry in module search path is our own directory - 
// replace that with the web app's directory 
var path = system.args[0] || ".";
require.paths[0] = path;

options.moduleName = options.config || "config";
options.functionName = options.app || "app";
var config = require(options.config || "config");
require("core/object");
options = Object.merge(options, config.httpConfig || {});

var Server = require('helma/httpserver').Server;
new Server(options).start();

